name: ace5pro_kernel_kun6.6ÂêàÂπ∂10X

on:
  workflow_dispatch:
    inputs:
      CPU_ARCH:
        description: "ÁõÆÊ†áCPUÊû∂ÊûÑÂàÜÊîØÔºå‰æãÂ¶Ç sm8750 (ÈªòËÆ§: sm8750)"
        required: true
        default: 'sm8750'
      DEVICE_CONFIG:
        description: "ËÆæÂ§áÈÖçÁΩÆÊñá‰ª∂ÂêçÁß∞Ôºå‰æãÂ¶Ç oneplus_ace5_pro (ÈªòËÆ§: oneplus_ace5_pro)"
        required: true
        default: 'oneplus_ace5_pro_pro'
      ANDROID_TARGET_VERSION:
        description: "ÁõÆÊ†áAndroidÁâàÊú¨Ôºå‰æãÂ¶Ç android15 (ÈªòËÆ§: android15)"
        required: true
        default: 'android15'
      KERNEL_BASE_VERSION:
        description: "ÂÜÖÊ†∏Âü∫Á°ÄÁâàÊú¨Ôºå‰æãÂ¶Ç 6.6 (ÈªòËÆ§: 6.6)"
        required: true
        default: '6.6'
      CUSTOM_KERNEL_NAME_TAG:
        description: "Ëá™ÂÆö‰πâÂÜÖÊ†∏ÂêçÁß∞Ê†áËØÜÔºåÂ∞ÜÈôÑÂä†Âà∞ÂÜÖÊ†∏ÁâàÊú¨Âè∑Âêé (‰æãÂ¶Ç: -android15-8-g29d86c5fc9dd-abogki428889875-4k)"
        required: false
        default: '-android15-8-g29d86c5fc9dd-abogki428889875-4k'
        type: string
      LOCAL_VERSION_SUFFIX:
        description: 'ÂÜÖÊ†∏ÁâàÊú¨ÂêéÁºÄÔºàÂ¶Ç-v8ÔºåÈªòËÆ§ÔºöÁ©∫Ôºâ'
        required: false
        default: ''
        type: string
      REMOVE_DEFAULT_4K_SUFFIX:
        description: 'ÊòØÂê¶Âà†Èô§ÈªòËÆ§ÁöÑ -4k ÂêéÁºÄÔºüÔºàÂãæÈÄâÂàôÂà†Èô§Ôºâ'
        required: false
        default: true
        type: boolean
      BUILD_TIMESTAMP:
        description: 'ÂÜÖÊ†∏ÊûÑÂª∫Êó∂Èó¥ (UTCÊ†ºÂºèÔºå‰æãÂ¶Ç "Tue Dec 17 23:36:49 UTC 2024")'
        required: false
        default: 'Tue Jul 1 19:48:18 UTC 2025'
        type: string

env:
  WORKSPACE_DIR: kernel_workspace
  KERNEL_PLATFORM_DIR: ${{ github.workspace }}/kernel_workspace/kernel_platform
  CCACHE_DIR: /home/runner/.ccache
  CCACHE_MAXSIZE: 8G
  CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
  CCACHE_NOHASHDIR: "true"
  CCACHE_HARDLINK: "true"
  KSU_VERSION_BASE: 10606

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      TOKEN: ${{ secrets.TOKEN }}
    
    steps:
      - name: 1.1 ÊúÄÂ§ßÂåñÊûÑÂª∫Á©∫Èó¥
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          
      - name: 1.2 ÈÖçÁΩÆGitÁî®Êà∑‰ø°ÊÅØ
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: 1.3 Ê£ÄÂá∫Â∑•‰ΩúÊµÅ‰ªìÂ∫ì‰ª£Á†Å  
        uses: actions/checkout@v4  

      - name: 1.4 ÂÆâË£ÖÊûÑÂª∫Ê†∏ÂøÉ‰æùËµñ  
        run: |  
          sudo apt-get update  
          sudo apt-get install -y --no-install-recommends \
            python3 git curl ccache libelf-dev build-essential \
            bc bison flex libssl-dev libncurses5-dev

      - name: 2.1 ÊÅ¢Â§ç ccache ÁºìÂ≠ò
        uses: actions/cache@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ${{ runner.os }}-${{ github.repository }}-${{ github.ref_name }}-v1_pro
          restore-keys: |
            ${{ runner.os }}-${{ github.repository }}-${{ github.ref_name }}-ccache-
            ${{ runner.os }}-${{ github.repository }}-ccache-
            ${{ runner.os }}-ccache-
    
      - name: 2.2 ÈÖçÁΩÆ ccache
        run: |  
          echo "CCACHE_BASEDIR=${{ github.workspace }}" >> $GITHUB_ENV  
          echo "CCACHE_LOGFILE=${{ github.workspace }}/ccache.log" >> $GITHUB_ENV  
          echo "/usr/lib/ccache" >> $GITHUB_PATH  
         
      - name: 2.3 ÊòæÁ§∫ ccache ÁªüËÆ°‰ø°ÊÅØ
        run: |
          ccache -s || true
         
      - name: 3.1 ÂÆâË£Ö repo Â∑•ÂÖ∑
        run: |
          curl -sSL https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: 3.2 ÂàùÂßãÂåñÂπ∂ÂêåÊ≠•ÂÜÖÊ†∏Ê∫êÁ†Å
        run: |
          mkdir -p ${{ env.WORKSPACE_DIR }} && cd ${{ env.WORKSPACE_DIR }}
          repo init -u https://github.com/3620603660/kernel_manifest.git \
            -b refs/heads/oneplus/${{ github.event.inputs.CPU_ARCH }} \
            -m ${{ github.event.inputs.DEVICE_CONFIG }}.xml --depth=1
          repo sync -c -j$(nproc) --no-tags --no-clone-bundle
          
          # Ê∏ÖÁêÜ‰∏çÈúÄË¶ÅÁöÑÊñá‰ª∂
          rm -f kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports to remove."
          rm -f kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports to remove."
          
      - name: Set up KernelSU Next
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/pershoot/KernelSU-Next/next-susfs/kernel/setup.sh" | bash -s next-susfs
          cd KernelSU-Next
          KSU_VERSION=$(expr $(curl -sI "https://api.github.com/repos/KernelSU-Next/KernelSU-Next/commits?sha=next&per_page=1" | grep -i "link:" | sed -n 's/.*page=\([0-9]*\)>; rel="last".*/\1/p') "+" 10200)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=11998/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      - name: Set up SUSFS & apply patches
        run: |
         set -e
         cd kernel_workspace
         git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_TARGET_VERSION }}-${{ github.event.inputs.KERNEL_BASE_VERSION }}
         git clone --depth=1 https://github.com/SukiSU-Ultra/SukiSU_patch.git
         git clone https://$TOKEN@github.com/PxxPei/boot.git
         git clone https://github.com/WildPlusKernel/kernel_patches.git
         git clone https://github.com/PxxPei/GKI_KernelSU_SUSFS.git zzh_patch
         cd kernel_platform
         echo "Ê≠£Âú®ÊãâÂèñsusfsË°•‰∏Å"
         cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_TARGET_VERSION }}-${{ github.event.inputs.KERNEL_BASE_VERSION }}.patch ./common/
         cp ../kernel_patches/next/scope_min_manual_hooks_v1.4.patch ./common/
         cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
         cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
         cp ../zzh_patch/next-patch/* ./KernelSU-Next/
         cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
         cp -r ../zzh_patch/zram/lz4/* ./common/lib/lz4/
         cp -r ../zzh_patch/zram/include/linux/* ./common/include/linux/
         cp -r ../zzh_patch/zram/${{ inputs.KERNEL_BASE_VERSION }}/lz4_1.10.0.patch ./common/
         cd ./common
         for file in \
         "lib/lz4/lz4_compress.c" \
         "lib/lz4/lz4_decompress.c" \
         "lib/lz4/lz4defs.h" \
         "lib/lz4/lz4hc_compress.c"
         do
         if [ -f "$file" ]; then
         echo "üóëÔ∏è Ê≠£Âú®Âà†Èô§Ôºö$file"
         rm -f "$file"
         else
         echo "‚ö†Ô∏è Êñá‰ª∂‰∏çÂ≠òÂú®Ôºö$file"
         fi
         done
         cd ../
         cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
         cp -r ../SukiSU_patch/other/zram/lz4k/include/linux/* ./common/include/linux || true
         cp -r ../SukiSU_patch/other/zram/lz4k/lib/* ./common/lib || true
         cp -r ../SukiSU_patch/other/zram/lz4k/crypto/* ./common/crypto || true
         cp -r ../SukiSU_patch/other/zram/lz4k_oplus ./common/lib/ || true
         cp ../boot/1.patch ./common/
         cd ./common/
         # if [[ "${{ github.event.inputs.DEVICE_CONFIG }}" == "oneplus_13" || "${{ github.event.inputs.DEVICE_CONFIG
         }}" == "oneplus_ace5_pro" ]]; then
         # sed -i 's/-32,12 +32,38/-32,11 +32,37/g' 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_TARGET_VERSION }}-${{ github.event.inputs.KERNEL_BASE_VERSION }}.patch
         # sed -i '/#include <trace\/hooks\/fs.h>/d' 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_TARGET_VERSION }}-${{ github.event.inputs.KERNEL_BASE_VERSION }}.patch
         # fi
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_TARGET_VERSION }}-${{ github.event.inputs.KERNEL_BASE_VERSION }}.patch || true
          # Replace next_hooks.patch with syscall_hooks.patch
          cp ../../kernel_patches/69_hide_stuff.patch ./
          patch -p1 -F 3 < 69_hide_stuff.patch
          patch -p1 --fuzz=3 < scope_min_manual_hooks_v1.4.patch
          patch -s -p1 -F 3 < 1.patch || true
          patch -p1 -F 3 --fuzz=5 < lz4_1.10.0.patch || true
          echo "‚úÖ SUSFS Âíå scope_min_manual_hooks_v1.4 patch Â∫îÁî®ÂÆåÊàê"         
         
      - name: ËÆæÁΩÆÂÜÖÊ†∏‰ºòÂåñÈÖçÁΩÆ
        run: |
          cd ${{ env.KERNEL_PLATFORM_DIR }}
          CONFIG_FILE="./common/arch/arm64/configs/gki_defconfig"
          if [ ! -f "$CONFIG_FILE" ]; then
            echo "Error: ÈÖçÁΩÆÊñá‰ª∂ $CONFIG_FILE ‰∏çÂ≠òÂú®"
            exit 1
          fi
          cat >> "$CONFIG_FILE" << 'EOF'
          # ‰ºòÂåñÂêéÁöÑ‰∏ÄÂä†Ace5 Pro (È™ÅÈæô8e, Android 15, Kernel 6.6.102) ÂÜÖÊ†∏ÈÖçÁΩÆ
          # KernelSU ÈÖçÁΩÆ (‰øùÊåÅ‰∏çÂèò)
          CONFIG_KSU=y
          CONFIG_KSU_KPROBES_HOOK=n
          CONFIG_KSU_SUSFS=y
          CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y
          CONFIG_KSU_SUSFS_SUS_PATH=y
          CONFIG_KSU_SUSFS_SUS_MOUNT=y
          CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y
          CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y
          CONFIG_KSU_SUSFS_SUS_KSTAT=y
          CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n
          CONFIG_KSU_SUSFS_TRY_UMOUNT=y
          CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y
          CONFIG_KSU_SUSFS_SPOOF_UNAME=y
          CONFIG_KSU_SUSFS_ENABLE_LOG=y
          CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y
          CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y
          CONFIG_KSU_SUSFS_OPEN_REDIRECT=y
          CONFIG_KSU_SUSFS_SUS_SU=n
          
          EOF
          
          sed -i 's/check_defconfig//' ./common/build.config.gki
          git add -A && git commit -a -m "BUILD Kernel with optimizations" || true
          echo "‚úÖ ÂÜÖÊ†∏‰ºòÂåñÈÖçÁΩÆÂ∑≤ÂÆåÊàê"
 
      - name: ÂêØÁî®ÁΩëÁªúÂäüËÉΩÂ¢ûÂº∫‰ºòÂåñÈÖçÁΩÆ
        run: |
          cd kernel_workspace
          if [[ "${{ github.event.inputs.better_net }}" == "true" ]]; then
            #ÂêØÁî®  BPF ÊµÅËß£ÊûêÂô®,ÂÆûÁé∞È´òÊÄßËÉΩÁΩëÁªúÊµÅÈáèÂ§ÑÁêÜ,Â¢ûÂº∫ÁΩëÁªúÁõëÊéßÂíåÂàÜÊûêËÉΩÂäõ
            echo "CONFIG_BPF_STREAM_PARSER=y" >> ./common/arch/arm64/configs/gki_defconfig
            #ÂºÄÂêØÂ¢ûÂº∫ Netfilter Èò≤ÁÅ´Â¢ôÊâ©Â±ïÊ®°Âùó,ÊîØÊåÅÂü∫‰∫éÂú∞ÂùÄÁ±ªÂûãÁöÑÂåπÈÖçËßÑÂàô,ÂêØÁî® IP ÈõÜÂêàÊîØÊåÅ,ÊèêÈ´òÈò≤ÁÅ´Â¢ôËßÑÂàôÁÅµÊ¥ªÊÄß,ÊîØÊåÅÊõ¥Â§çÊùÇÁöÑÊµÅÈáèËøáÊª§Á≠ñÁï•
            echo "CONFIG_NETFILTER_XT_MATCH_ADDRTYPE=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_NETFILTER_XT_SET=y" >> ./common/arch/arm64/configs/gki_defconfig
            #ÂêØÁî® IP ÈõÜÊ°ÜÊû∂ÂèäÂÖ∂Â§öÁßçÊï∞ÊçÆÁªìÊûÑÂÆûÁé∞,Êèê‰æõÈ´òÊïàÁöÑÂ§ßËßÑÊ®° IP Âú∞ÂùÄÁÆ°ÁêÜ,ÊèêÈ´òÈò≤ÁÅ´Â¢ôËßÑÂàôÂ§ÑÁêÜÊïàÁéá,ÂáèÂ∞ëÂÜÖÂ≠òÂç†Áî®
            echo "CONFIG_IP_SET=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP_SET_MAX=65534" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP_SET_BITMAP_IP=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP_SET_BITMAP_IPMAC=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP_SET_BITMAP_PORT=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP_SET_HASH_IP=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP_SET_HASH_IPMARK=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP_SET_HASH_IPPORT=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP_SET_HASH_IPPORTIP=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP_SET_HASH_IPPORTNET=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP_SET_HASH_IPMAC=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP_SET_HASH_MAC=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP_SET_HASH_NETPORTNET=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP_SET_HASH_NET=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP_SET_HASH_NETNET=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP_SET_HASH_NETPORT=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP_SET_HASH_NETIFACE=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP_SET_LIST_SET=y" >> ./common/arch/arm64/configs/gki_defconfig
            #ÂêØÁî® IPv6 ÁΩëÁªúÂú∞ÂùÄËΩ¨Êç¢
            echo "CONFIG_IP6_NF_NAT=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_IP6_NF_TARGET_MASQUERADE=y" >> ./common/arch/arm64/configs/gki_defconfig
            #Áî±‰∫éÈÉ®ÂàÜÊú∫ÂûãÁöÑvintfÂÖºÂÆπÊÄßÊ£ÄÊµãËßÑÂàôÔºåÂú®ÂºÄÂêØCONFIG_IP6_NF_NATÂêéÂºÄÊú∫‰ºöÂá∫Áé∞"ÊÇ®ÁöÑËÆæÂ§áÂÜÖÈÉ®Âá∫Áé∞‰∫ÜÈóÆÈ¢ò„ÄÇËØ∑ËÅîÁ≥ªÊÇ®ÁöÑËÆæÂ§áÂà∂ÈÄ†ÂïÜ‰∫ÜËß£ËØ¶ÊÉÖ„ÄÇ"ÁöÑÊèêÁ§∫ÔºåÊïÖÊ∑ªÂä†‰∏Ä‰∏™ÈÖçÁΩÆ‰øÆÂ§çË°•‰∏ÅÔºåÂú®ÁºñËØëÂÜÖÊ†∏Êó∂ÈöêËóèCONFIG_IP6_NF_NAT=y‰ΩÜ‰∏çÂΩ±ÂìçÂØπÂ∫îÂäüËÉΩÁºñËØë
            cd common
            wget https://github.com/cctv18/oppo_oplus_realme_sm8650/raw/refs/heads/main/other_patch/config.patch
            patch -p1 -F 3 < config.patch || true
          fi

      - name: Ê∑ªÂä† BBR Á≠â‰∏ÄÁ≥ªÂàóÊã•Â°ûÊéßÂà∂ÁÆóÊ≥ï
        run: |
          if [[ "${{ github.event.inputs.bbr_enable }}" == "true" || "${{ github.event.inputs.bbr_enable }}" == "default" ]]; then
            echo "Ê≠£Âú®Ê∑ªÂä†BBRÁ≠âÊã•Â°ûÊéßÂà∂ÁÆóÊ≥ï..."
            cd kernel_workspace
            #ÂºÄÂêØTCPÊã•Â°ûÊéßÂà∂ÁÆóÊ≥ïÊéßÂà∂Âô®ÔºàÂøÖÈúÄÔºâ
            echo "CONFIG_TCP_CONG_ADVANCED=y" >> ./common/arch/arm64/configs/gki_defconfig
            ################################################################################################################################
            # BBRÔºöÂü∫‰∫éÈìæË∑ØÂÆπÈáèÁöÑ‰ª£Ë°®Êã•Â°ûÊéßÂà∂ÁÆóÊ≥ïÔºå‰∏çÂÜç‰ΩøÁî®‰∏¢ÂåÖ„ÄÅÂª∂Êó∂Á≠â‰ø°Âè∑ÂéªË°°ÈáèÊã•Â°ûÊòØÂê¶ÂèëÁîüÔºåËÄåÊòØÁõ¥Êé•ÂØπÁΩëÁªúÂª∫Ê®°Êù•Â∫îÂØπ„ÄÅÈÅøÂÖçÁúüÂÆûÁöÑÁΩëÁªúÊã•Â°ûÔºõ
            # ÂÖ∑ÊúâÈ´òÂêûÂêê„ÄÅ‰ΩéÂª∂Ëøü„ÄÅÊäó‰∏¢ÂåÖÁöÑÁâπÁÇπÔºå‰ΩÜÂú®ÊâãÊú∫‰∏ä‰ΩøÁî®Êó∂Áî±‰∫éÊåÅÁª≠Êé¢ÊµãÂ∏¶ÂÆΩ/RTT„ÄÅÈ´òÈ¢ëËÆ°ÁÆó‰∏éÂèëÂåÖÂ¢ûÂä† CPU ÂíåÂ∞ÑÈ¢ëÊ®°ÂùóÂäüËÄóÔºå‰ºöÂ¢ûÂä†ËÄóÁîµÂèäÂèëÁÉ≠Ôºõ
            # ‰∏îÁßªÂä®Âü∫Á´ôÁºìÂÜ≤Âå∫Ê∑±Â∫¶ÈÄöÂ∏∏ËæÉÂ∞èÔºà~50msÔºâÔºåBBR ÁöÑÂ∏¶ÂÆΩÊé¢ÊµãÈò∂ÊÆµÔºàProbeRTTÔºâËøáÂ∫¶ÈôçÁ™óÂèØËÉΩÂØºËá¥ÂêûÂêêÈáèÈ™§ÈôçÔºå‰∏îÁΩëÁªúÂàáÊç¢ÔºàWiFi‚Üí5GÔºâÊó∂ÈúÄÈáçÊñ∞
            # Êé¢ÊµãÂèÇÊï∞ÔºåÂèçËÄåÂ¢ûÂä†Âª∂ËøüÊàñÂØºËá¥ÈÄüÁéáÊåØËç°ÔºàÁü≠ÊöÇÂç°È°øÔºâÔºå‰∏îÂ≠òÂú® RTT ‰∏çÂÖ¨Âπ≥ÊÄßÔºå‰∏éÂü∫‰∫é‰∏¢ÂåÖÁöÑÊµÅÁ´û‰∫âÊó∂ÂèØËÉΩËøá‰∫éÂº∫ÂäøÔºåÂú®Ê∑∑ÂêàÁΩëÁªúÁéØÂ¢É‰∏≠
            #ÔºàÂ¶Ç BBR + CUBIC ÂÖ±Â≠òÔºâÔºåBBR ‰ºöÊä¢Âç†Êõ¥Â§öÂÖ∂‰ªñËΩØ‰ª∂ÁöÑÂ∏¶ÂÆΩÔºåÈôç‰ΩéÂÖ∂‰ªñÂ∫îÁî®ÁöÑÂÖ¨Âπ≥ÊÄßÔºàÂ¶ÇÂêéÂè∞ËΩØ‰ª∂Êõ¥Êñ∞ÂΩ±ÂìçÂâçÂè∞ËßÜÈ¢ëÊí≠ÊîæÔºâ„ÄÇ
            # Âõ†Ê≠§ÔºåËôΩÁÑ∂BBRÂèØ‰ª•ÊòæËëóÂáèÂ∞ëÊéíÈòüÂª∂ËøüÔºåÊäó‰∏¢ÂåÖËÉΩÂäõÂº∫ÔºåÂ∏¶ÂÆΩÂà©Áî®ÁéáÈ´òÔºå‰ΩÜÁî±‰∫éÂÖ∂‰ºöÂ¢ûÂä†ËÄóÁîµÔºå‰∏îÊòìÂØºËá¥ÁΩëÁªúÈÄüÁéáÊ≥¢Âä®ÔºåÊïÖÂÆâÂçìÁ≥ªÁªüÈªòËÆ§‰∏ç‰ΩøÁî®
            # BBRÊã•Â°ûÁÆóÊ≥ïÔºåËÄåÊòØ‰ΩøÁî®Âú®ÂêûÂêêÈáè„ÄÅÁ®≥ÂÆöÊÄß„ÄÅÂÖºÂÆπÊÄß„ÄÅËÉΩÊïà‰πãÈó¥ÂèñÂæóÊúÄ‰Ω≥Âπ≥Ë°°ÁöÑCUBICÁÆóÊ≥ï„ÄÇÂú®ÂºÄÂêØBBRÂâçÔºåËØ∑ËÄÉËôëËá™Â∑±ÊòØÂê¶ÁúüÁöÑÊúâ‰ΩøÁî®BBRÁöÑÂøÖË¶Å„ÄÇ
            ################################################################################################################################
            echo "CONFIG_TCP_CONG_BBR=y" >> ./common/arch/arm64/configs/gki_defconfig
            #CUBICÔºöÂÆâÂçìÁöÑÈªòËÆ§TCPÊã•Â°ûÊéßÂà∂ÁÆóÊ≥ïÔºåÂú®ÂêûÂêêÈáè„ÄÅÁ®≥ÂÆöÊÄß„ÄÅÂÖºÂÆπÊÄß„ÄÅËÉΩÊïà‰πãÈó¥ÂèñÂæóÊúÄ‰Ω≥Âπ≥Ë°°ÔºåÂÖ∑ÊúâÈ´òÂÖºÂÆπÊÄß‰∏éÂÖ¨Âπ≥ÊÄß„ÄÅÊäóÁΩëÁªúÊ≥¢Âä®ÊÄßÂº∫„ÄÅ‰ΩéËÆ°ÁÆóÂºÄÈîÄÁöÑÁâπÁÇπÔºåÊòØÁªùÂ§ßÈÉ®ÂàÜÁßªÂä®Âú∫ÊôØÁöÑ‰ºòÂÖàÈÄâÊã©
            echo "CONFIG_TCP_CONG_CUBIC=y" >> ./common/arch/arm64/configs/gki_defconfig
            #VEGASÔºöÂü∫‰∫éÊó∂Âª∂ÁöÑÊã•Â°ûÊéßÂà∂ÁÆóÊ≥ï‰πã‰∏ÄÔºåÂ∞ÜÂõûË∑ØÂìçÂ∫îÊó∂Èó¥ÔºàRound Trip TimeÔºåRTTÔºâÂ¢ûÂä†ËßÜ‰∏∫Âá∫Áé∞Êã•Â°ûÔºåÂ¢ûÂä†Êó∂Â¢ûÂ§ßÊã•Â°ûÁ™óÂè£ÔºåÂáèÂ∞èÊó∂ÂáèÂ∞èÊã•Â°ûÁ™óÂè£
            echo "CONFIG_TCP_CONG_VEGAS=y" >> ./common/arch/arm64/configs/gki_defconfig
            #New VegasÔºöVegas ÁÆóÊ≥ïÁöÑÊîπËøõÁâàÔºå‰ºòÂåñ‰∫Ü RTT ÊµãÈáèÂíåÁ´û‰∫âÂÖ¨Âπ≥ÊÄßÔºåÂèØ‰ª•Êõ¥ÂáÜÁ°ÆÂú∞Ê£ÄÊµãÊã•Â°ûÔºå‰∏é Reno/CUBIC ÂÖ±Â≠òËÉΩÂäõÊèêÂçá
            echo "CONFIG_TCP_CONG_NV=y" >> ./common/arch/arm64/configs/gki_defconfig
            #Westwood+ÔºöÂü∫‰∫éÂ∏¶ÂÆΩ‰º∞ËÆ°ÔºàACK Âà∞ËææÁéáÔºâÂä®ÊÄÅËÆæÁΩÆÊã•Â°ûÁ™óÂè£ÂíåÊÖ¢ÂêØÂä®ÈòàÂÄºÔºõÂø´ÈÄüÊÅ¢Â§çÔºåÈÄÇÂêàÊó†Á∫øÁΩëÁªúÔºàÂå∫ÂàÜÊã•Â°û‰∏¢ÂåÖ‰∏éÊó†Á∫ø‰∏¢ÂåÖÔºâ
            echo "CONFIG_TCP_CONG_WESTWOOD=y" >> ./common/arch/arm64/configs/gki_defconfig
            #HTCPÔºö‰∏ÄÁßçÂü∫‰∫éÊçüÂ§±ÁöÑÁÆóÊ≥ïÔºå‰ΩøÁî® AIMD Êù•ÊéßÂà∂Êã•Â°ûÁ™óÂè£ÔºåÊ†πÊçÆ RTT Âä®ÊÄÅË∞ÉÊï¥Â¢ûÈïøÂõ†Â≠êÔºåÁªìÂêàÂª∂ËøüÂíå‰∏¢ÂåÖ‰ø°Âè∑ÔºåÈíàÂØπÈ´òÂª∂ËøüÁöÑÈ´òÈÄüÁΩëÁªúËøõË°å‰ºòÂåñ
            echo "CONFIG_TCP_CONG_HTCP=y" >> ./common/arch/arm64/configs/gki_defconfig
            #brutalÔºö‰∏ÄÁßçÈÄöËøá‰∏ªÂä®Êé¢Êµã + ÊøÄËøõÊä¢Âç†ÊúÄÂ§ßÂåñÂêûÂêêÈáèÁöÑÊã•Â°ûÁÆóÊ≥ïÔºåÊó†Êã•Â°ûÁ™óÂè£‰∏äÈôêÔºåËΩªÂ∫¶‰∏¢ÂåÖÔºà<20%Ôºâ‰∏çÈôçÁ™óÔºåÈÅøÂÖçÁ±ª‰ºº BBR ÁöÑ ProbeRTT Èò∂ÊÆµÔºå
            #ÊåÅÁª≠Áª¥ÊåÅÈ´òÂèëÈÄÅÈÄüÁéáÔºå‰∏é Reno/CUBIC ÂÖ±Â≠òÊó∂ÔºåBrutal ÂèØÈÄöËøáÈ´òÈ¢ëÂèëÂåÖÊä¢Âç† 90%+ Â∏¶ÂÆΩÔºåÈÄÇÁî®‰∫éÈ´ò‰∏¢ÂåÖÂº±ÁΩëÁéØÂ¢ÉÔºàÂ¶ÇÂÖ¨ÂÖ± Wi-Fi„ÄÅËúÇÁ™ùÁΩëÁªúÔºâÂèä
            #Áõ¥Êí≠Êé®ÊµÅ„ÄÅ‰∫ëÊ∏∏Êàè‰∏äË°åÈìæË∑ØÁ≠âÈúÄ‰ºòÂÖà‰øùËØÅÂêûÂêêÈáèËÄåÈùûÂª∂ËøüÊïèÊÑüÁöÑÂú∫ÊôØÔºåÊèêÂçáÂº±ÁΩëÂêûÂêêÊÄßËÉΩÔºåÂØπÊäóËøêËê•ÂïÜ QoS ÈôêÈÄü„ÄÇ‰ΩÜÁî±‰∫éTCP Brutal ‰ªÖÂú®Â∫îÁî®Á®ãÂ∫è
            #ÂØπÊØè‰∏™ TCP ËøûÊé•ËÆæÁΩÆÂ∏¶ÂÆΩÂèÇÊï∞‰πãÂêéÊâçËÉΩÊ≠£Â∏∏Â∑•‰ΩúÔºåÁªùÂ§ßÈÉ®ÂàÜÂÆâÂçìÂ∫îÁî®ÈÉΩ‰∏çÊîØÊåÅËØ•Êìç‰ΩúÔºåÊïÖËØ∑ÂãøÂ∞Ü TCP Brutal ËÆæÁΩÆÊàêÈªòËÆ§Êã•Â°ûÊéßÂà∂ÁÆóÊ≥ï„ÄÇ
            echo "CONFIG_TCP_CONG_BRUTAL=y" >> ./common/arch/arm64/configs/gki_defconfig
            if [[ "${{ github.event.inputs.bbr_enable }}" == "default" ]]; then
              echo "Ê≠£Âú®Â∞ÜBBRËÆæ‰∏∫ÈªòËÆ§Êã•Â°ûÊéßÂà∂ÁÆóÊ≥ï..."
              echo "CONFIG_DEFAULT_TCP_CONG=bbr" >> ./common/arch/arm64/configs/gki_defconfig
            else
              echo "CONFIG_DEFAULT_TCP_CONG=cubic" >> ./common/arch/arm64/configs/gki_defconfig
            fi
          fi

      - name: ÂêØÁî®ADIOS IOË∞ÉÂ∫¶Âô®
        run: |
          if [[ "${{ github.event.inputs.adios_rekernel_enable }}" == "1" || "${{ github.event.inputs.adios_rekernel_enable }}" == "3" ]]; then
            echo "Ê≠£Âú®ÂêØÁî®ADIOS IOË∞ÉÂ∫¶Âô®(Â∞ÜÊà™Ê≠¢Êó∂Èó¥‰ºòÂÖàË∞ÉÂ∫¶ÁÆóÊ≥ï‰∏éÂü∫‰∫éËá™‰∏ªÂ≠¶‰π†ÁöÑËá™ÈÄÇÂ∫îÂª∂ËøüÊéßÂà∂ÁÆóÊ≥ïÁõ∏ÁªìÂêà, Èôç‰ΩéI/OÂª∂Ëøü)‚Ä¶"
            cd kernel_workspace
            echo "CONFIG_MQ_IOSCHED_ADIOS=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_MQ_IOSCHED_DEFAULT_ADIOS=y" >> ./common/arch/arm64/configs/gki_defconfig
          fi

      - name: ÂêØÁî®Re-KernelÊîØÊåÅ
        run: |
          if [[ "${{ github.event.inputs.adios_rekernel_enable }}" == "2" || "${{ github.event.inputs.adios_rekernel_enable }}" == "3" ]]; then
            echo "Ê≠£Âú®ÂêØÁî®Re-KernelÊîØÊåÅ(Áî®‰∫é‰∏éFreezer,NoActiveÁ≠âËΩØ‰ª∂ÈÖçÂêà‰ΩøÁî®,ÊèêÂçáÂÜªÁªìÂêéÂè∞ËÉΩÂäõ)‚Ä¶"
            cd kernel_workspace
            echo "CONFIG_REKERNEL=y" >> ./common/arch/arm64/configs/gki_defconfig
          fi
          
      - name: 7.1 ‰øÆÊîπÂÜÖÊ†∏ÁâàÊú¨ÊòæÁ§∫ÂêçÁß∞
        run: |
          cd ${{ env.KERNEL_PLATFORM_DIR }}
          sed -i 's|^echo ".*"|echo "${KERNELVERSION}${scm_version}${config_localversion}"|' common/scripts/setlocalversion
          if [ -n "${{ github.event.inputs.CUSTOM_KERNEL_NAME_TAG }}" ]; then
            sed -i "s/\${scm_version}/${{ github.event.inputs.CUSTOM_KERNEL_NAME_TAG }}/g" ./common/scripts/setlocalversion
          fi
         
      - name: 7.2 ËÆæÁΩÆ CONFIG_LOCALVERSION
        run: |
          cd ${{ env.KERNEL_PLATFORM_DIR }}
          if [ -n "${{ github.event.inputs.LOCAL_VERSION_SUFFIX }}" ]; then
            echo 'CONFIG_LOCALVERSION="${{ github.event.inputs.LOCAL_VERSION_SUFFIX }}"' >> ./common/arch/arm64/configs/gki_defconfig
          fi

      - name: 7.3 Âà†Èô§ CONFIG_LOCALVERSION ‰∏≠ÁöÑ -4k ÂêéÁºÄÔºàÂ¶ÇÊûúÂãæÈÄâÔºâ
        if: ${{ fromJSON(github.event.inputs.REMOVE_DEFAULT_4K_SUFFIX) }}
        run: |
          cd ${{ env.KERNEL_PLATFORM_DIR }}
          sed -i 's/-4k//' ./common/arch/arm64/configs/gki_defconfig

      - name: 8.1 ËÆæÁΩÆÊûÑÂª∫Êó∂Èó¥Êà≥
        run: |         
          if [ -n "${{ github.event.inputs.BUILD_TIMESTAMP }}" ]; then
            export SOURCE_DATE_EPOCH=$(date -d "${{ github.event.inputs.BUILD_TIMESTAMP }}" +%s)
            echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH" >> $GITHUB_ENV
          else
            echo "SOURCE_DATE_EPOCH=$(date +%s)" >> $GITHUB_ENV
          fi
      
      - name: Add sched_ext
        run: |
         cd ${{ env.KERNEL_PLATFORM_DIR }}
         git clone --depth=1 https://github.com/3620603660/sched_ext.git
         cp -r ./sched_ext/* ./common/kernel/sched
         rm -rf ./sched_ext/.git

      - name: 8.2 ÊãâÂèñafdo
        run: |
          cd ${{ env.WORKSPACE_DIR }}
          git clone --depth=1 https://github.com/PxxPei/afdo.git

      - name: 9.1 ÂÆâË£ÖÂíåËÆæÁΩÆ Clang 19.0.0 ÁºñËØëÂô®ÁéØÂ¢É
        run: |
          mkdir -p clang19
          cd clang19
          wget -q https://github.com/ZyCromerZ/Clang/releases/download/19.0.0git-20240723-release/Clang-19.0.0git-20240723.tar.gz
          tar -zxf Clang-19.0.0git-20240723.tar.gz
          echo "CLANG_PATH=${{ github.workspace }}/clang19/bin" >> $GITHUB_ENV

      - name: 10.1 ÁºñËØëÂÜÖÊ†∏
        run: |
          export PATH="${{ env.CLANG_PATH }}:${PATH}"
          export PATH="/usr/lib/ccache:${PATH}"
          
          export KERNEL_TIME="${{ github.event.inputs.BUILD_TIMESTAMP }}"
          export KBUILD_BUILD_TIMESTAMP="${KERNEL_TIME:-$(date -u '+%a %b %d %H:%M:%S UTC %Y')}"
          export SOURCE_DATE_EPOCH=${{ env.SOURCE_DATE_EPOCH }}

          export AFDO_PROFILE="${{ github.workspace }}/${{ env.WORKSPACE_DIR }}/afdo/kernel.afdo"
          if [ ! -f "$AFDO_PROFILE" ]; then
             echo "Error: AFDO profile not found at $AFDO_PROFILE"
              exit 1
          fi
          
          export KCFLAGS="-Wno-error -mllvm -thinlto-assume-merged -fauto-profile=$AFDO_PROFILE"
          echo "Using KCFLAGS: ${KCFLAGS}"
          
          export CC="ccache clang"
          export MAKE_ARGS="LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC=clang \
          RUSTC=../../prebuilts/rust/linux-x86/1.73.0b/bin/rustc \
          PAHOLE=../../prebuilts/kernel-build-tools/linux-x86/bin/pahole \
          LD=ld.lld HOSTLD=ld.lld O=out SOURCE_DATE_EPOCH=${SOURCE_DATE_EPOCH}"
          
          cd ${{ env.KERNEL_PLATFORM_DIR }}/common
          rm -rf out
          
          echo "ÂºÄÂßãÁºñËØëÂÜÖÊ†∏..."
          export KBUILD_CFLAGS="-fpolly -flto=thin"
          make $MAKE_ARGS gki_defconfig
          make $MAKE_ARGS -j$(nproc)

          echo "‚úÖ ÂÜÖÊ†∏ÁºñËØëÂÆåÊàê"

      - name: 11.1 ÊòæÁ§∫ÁºñËØëÁªìÊûú
        run: |
          cd ${{ env.KERNEL_PLATFORM_DIR }}/common
          if [ -f "out/arch/arm64/boot/Image" ]; then
            echo "‚úÖ ÂÜÖÊ†∏ÈïúÂÉèÁºñËØëÊàêÂäü"
            ls -lh out/arch/arm64/boot/Image*
          else
            echo "‚ùå ÂÜÖÊ†∏ÈïúÂÉèÁºñËØëÂ§±Ë¥•"
            exit 1
          fi
          
          mkdir -p ../dist
          cp out/arch/arm64/boot/Image ../dist/
          echo "‚úÖ ÂÜÖÊ†∏ÁºñËØëÊàêÂäüÔºÅ‰∫ßÁâ©Â∑≤Â§çÂà∂Âà∞ dist ÁõÆÂΩï„ÄÇ"
          
      - name: 10.2 È™åËØÅÂÜÖÊ†∏ÊûÑÂª∫Êó∂Èó¥
        run: |
         strings kernel_workspace/kernel_platform/common/out/vmlinux | grep "UTC"

      - name: 11.1 ÂáÜÂ§á AnyKernel3 Âà∑Êú∫ÂåÖ
        run: |
          cd kernel_workspace/kernel_platform/dist
          git clone https://github.com/3620603660/AnyKernel3.git AnyKernel3 --depth=1
          rm -rf AnyKernel3/.git
          rm -f AnyKernel3/push.sh
          cp Image AnyKernel3/

      - name: 11.2 ‰∏ä‰º†ÁºñËØë‰∫ßÁâ©Âà∞ Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_${{ github.event.inputs.DEVICE_CONFIG }}_${{ env.KSUVER }}
          path: kernel_workspace/kernel_platform/dist/AnyKernel3/*
          
      - name: 11.2 ÊòæÁ§∫ÊúÄÁªà ccache ÁªüËÆ°‰ø°ÊÅØ
        run: |
          ccache -s


