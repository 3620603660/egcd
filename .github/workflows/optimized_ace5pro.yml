name: ace5pro(ÂÖ∂ÂÆÉ‰ºòÂåñ)
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "ÂàÜÊîØ"
        required: true
        default: 'sm8750'
      FEIL:
        description: "ÈÖçÁΩÆÊñá‰ª∂"
        required: true
        default: 'oneplus_ace5_pro'
      ANDROID_VERSION:
        description: "ÂÜÖÊ†∏ÂÆâÂçìÁâàÊú¨"
        required: true
        default: 'android15'
      KERNEL_VERSION:
        description: "ÂÜÖÊ†∏ÁâàÊú¨"
        required: true
        default: '6.6'
      KERNEL_NAME:
        description: "‰øÆÊîπÂÜÖÊ†∏ÂêçÁß∞"
        required: true
        default: '-android15-8-g013ec21bba94-abogki383916444'
      ENABLE_KPM:
        description: "ÂêØÁî®kpm"
        required: false
        default: false
        type: boolean
      local_version:
        description: 'ËæìÂÖ•ÂÜÖÊ†∏ÂêéÁºÄÂêçÔºàÂ¶Ç-v8Ôºâ'
        required: false
        default: '-4k'
        type: string
      kernel_time:
        description: 'ÂÜÖÊ†∏ÊûÑÂª∫Êó∂Èó¥ÔºàUTC Êó∂Èó¥Â≠óÁ¨¶‰∏≤Ôºå‰æãÂ¶Ç "Tue Dec 17 23:36:49 UTC 2024"Ôºâ'
        required: false
        default: "$(date -u '+%a %b %d %H:%M:%S UTC %Y')"
        type: string
      ENABLE_LTO:
        description: 'ÂêØÁî® LTO'
        required: false
        default: false
        type: boolean
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      TOKEN: ${{ secrets.TOKEN }}
      KERNEL_WORKSPACE: ${{ github.workspace }}/kernel_workspace
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          
      - name: Configure Git
        run: |
         git config --global user.name "build"
         git config --global user.email "3620603668@qq.com"

      # 1. ÊãâÂèñ‰ªìÂ∫ì  
      - name: Checkout  
        uses: actions/checkout@v4  

      # 2. ÁºìÂ≠ò apt ÂåÖ
      - name: Cache apt packages
        uses: actions/cache@v4
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-${{ hashFiles('**/Dockerfile', '**/.github/workflows/*.yml') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      # 3. ÂÆâË£ÖÊûÑÂª∫‰æùËµñÔºàÂåÖÊã¨ ccacheÔºâ  
      - name: Install Dependencies  
        run: |
         sudo apt-get update
         sudo apt-get install -y python3 git curl ccache libelf-dev

      # 4. ÊÅ¢Â§ç ccache ÁºìÂ≠ò  
      - name: Restore ccache
        uses: actions/cache@v4
        with:
         path: /home/runner/.ccache
         key: ${{ runner.os }}-ccache-${{ github.ref_name }}-${{ github.sha }}
         restore-keys: |
          ${{ runner.os }}-ccache-${{ github.ref_name }}-
          ${{ runner.os }}-ccache-
          ccache-

      # 5. ËÆæÁΩÆ ccache ÁéØÂ¢ÉÂèòÈáè  
      - name: Setup ccache environment  
        run: |
         echo "CCACHE_DIR=/home/runner/.ccache" >> $GITHUB_ENV  
         echo "CCACHE_MAXSIZE=8G" >> $GITHUB_ENV  
         echo "CCACHE_COMPILERCHECK=%compiler% -dumpmachine; %compiler% -dumpversion" >> $GITHUB_ENV  
         echo "CCACHE_NOHASHDIR=true" >> $GITHUB_ENV  
         echo "CCACHE_HARDLINK=true" >> $GITHUB_ENV  
         echo "CCACHE_BASEDIR=${{ github.workspace }}" >> $GITHUB_ENV  
         echo "CCACHE_LOGFILE=${{ github.workspace }}/ccache.log" >> $GITHUB_ENV  
         echo "/usr/lib/ccache" >> $GITHUB_PATH  
         
      - name: Show ccache stats
        run: |
         ccache -s

      # 6. ÂÆâË£Ö repo Â∑•ÂÖ∑
      - name: Install repo tool
        run: |
         curl -sSL https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
         chmod a+x ~/repo
         sudo mv ~/repo /usr/local/bin/repo

      # 7. ÂàùÂßãÂåñ repo Âπ∂ÂêåÊ≠•
      - name: Initialize repo and sync
        run: |
         mkdir -p ${{ env.KERNEL_WORKSPACE }} && cd ${{ env.KERNEL_WORKSPACE }}
         repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1
         repo --trace sync -c -j$(nproc --all) --no-tags
         rm -f kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
         rm -f kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
         
      # 8. ËÆæÁΩÆ SukiSU
      - name: Set up SukiSU
        run: |
         cd ${{ env.KERNEL_WORKSPACE }}/kernel_platform
         curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-main
         cd ./KernelSU
         KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10606)
         echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
         export KSU_VERSION=$KSU_VERSION
         sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      # 9. ËÆæÁΩÆ SUSFS Âπ∂Â∫îÁî®Ë°•‰∏Å
      - name: Set up SUSFS & apply patches
        run: |
         set -e
         cd ${{ env.KERNEL_WORKSPACE }}
         git clone --depth=1 https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }}
         git clone --depth=1 https://github.com/SukiSU-Ultra/SukiSU_patch.git
         git clone https://$TOKEN@github.com/3620603660/boot.git
         cd kernel_platform
         cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }}.patch ./common/ || true
         mkdir -p ./common/fs ./common/include/linux ./common/lib ./common/crypto
         cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/ || true
         cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/ || true
         cp -r ../SukiSU_patch/other/zram/lz4k/include/linux/* ./common/include/linux || true
         cp -r ../SukiSU_patch/other/zram/lz4k/lib/* ./common/lib || true
         cp -r ../SukiSU_patch/other/zram/lz4k/crypto/* ./common/crypto || true
         cp -r ../SukiSU_patch/other/zram/lz4k_oplus ./common/lib/ || true
         cp ../boot/1.patch ./common/
         cd ./common
         PATCH_FILE=50_add_susfs_in_gki-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }}.patch
         if [[ -f "$PATCH_FILE" ]]; then
           sed -i 's/-32,12 +32,38/-32,11 +32,37/g' "$PATCH_FILE"
           sed -i '/#include <trace\/hooks\/fs.h>/d' "$PATCH_FILE"
           patch -p1 < "$PATCH_FILE"
         else
           echo "‚ùó lz4kd patch not found for kernel version ${{ inputs.KERNEL_VERSION }}"
         fi
         cp ../../SukiSU_patch/hooks/syscall_hooks.patch ./
         patch -p1 -F 3 < syscall_hooks.patch
         patch -s -p1 -F 3 < 1.patch
         echo "‚úÖ SUSFS Âíå syscall_hooks patch Â∫îÁî®ÂÆåÊàê"

      # 10. Êõ¥Êñ∞ÂéãÁº©ÁÆóÊ≥ï
      - name: üîß Update compression algorithms (Êõ¥Êñ∞ÂéãÁº©ÁÆóÊ≥ï)
        run: |
          cd ${{ env.KERNEL_WORKSPACE }}/kernel_platform/common
          
          # Êõ¥Êñ∞LZ4ÂÆûÁé∞
          curl -sSLO https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/plain/lib/lz4/lz4_decompress.c &
          curl -sSLO https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/plain/lib/lz4/lz4defs.h &
          curl -sSLO https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/plain/lib/lz4/lz4_compress.c &
          curl -sSLO https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/plain/lib/lz4/lz4hc_compress.c &
          wait
          
          # Êõ¥Êñ∞ZstdÂÆûÁé∞
          zstd_base="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/plain/lib/zstd"
          mkdir -p lib/zstd && cd lib/zstd
          curl -sSL $zstd_base/zstd_common_module.c -o common.c &
          curl -sSL $zstd_base/compress/zstd_compress_module.c -o compress.c &
          curl -sSL $zstd_base/decompress/zstd_decompress_module.c -o decompress.c &
          curl -sSL $zstd_base/zstd_compat.h -o compat.h &
          wait
          
          cd ../../..
          echo "‚úÖ LZ4/Zstd ÁÆóÊ≥ïÊõ¥Êñ∞ÂÆåÊàê"

      # 11. Â∫îÁî® lz4kd Ë°•‰∏Å
      - name: Apply lz4kd Patches
        run: |
         set -e
         cd ${{ env.KERNEL_WORKSPACE }}/kernel_platform/common
         PATCH_FILE=../../SukiSU_patch/other/zram/zram_patch/${{ inputs.KERNEL_VERSION }}/lz4kd.patch
         if [[ -f "$PATCH_FILE" ]]; then
           cp "$PATCH_FILE" ./lz4kd.patch
           patch -p1 -F 3 < lz4kd.patch
         else
           echo "‚ùó lz4kd patch not found for kernel version ${{ inputs.KERNEL_VERSION }}"
         fi

      # 12. Ê∑ªÂä† SUSFS ÈÖçÁΩÆËÆæÁΩÆ
      - name: Add SUSFS Configuration Settings
        run: |
          cd ${{ env.KERNEL_WORKSPACE }}/kernel_platform
          # ‰ΩøÁî® scripts/config Â∑•ÂÖ∑Êù•‰øÆÊîπÂÜÖÊ†∏ÈÖçÁΩÆÔºåÈÅøÂÖçÈáçÂ§çÊ∑ªÂä†
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_KSU
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -d CONFIG_KSU_SUSFS_SUS_SU
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_KSU_MANUAL_HOOK
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_KSU_SUSFS
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_KSU_SUSFS_SUS_PATH
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_KSU_SUSFS_SUS_MOUNT
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_KSU_SUSFS_SUS_KSTAT
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -d CONFIG_KSU_SUSFS_SUS_OVERLAYFS
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_KSU_SUSFS_TRY_UMOUNT
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_KSU_SUSFS_SPOOF_UNAME
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_KSU_SUSFS_ENABLE_LOG
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_KSU_SUSFS_OPEN_REDIRECT
          
          # Á°Æ‰øùÊâÄÊúâÂøÖÈúÄÁöÑÂéãÁº©ÁÆóÊ≥ïÈÉΩÂ∑≤ÂêØÁî®
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_CRYPTO_LZ4HC # ÂêØÁî® LZ4HC Âä†ÂØÜ
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_CRYPTO_LZ4K # ÂêØÁî® LZ4K Âä†ÂØÜ
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_CRYPTO_LZ4KD # ÂêØÁî® LZ4KD Âä†ÂØÜ
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_F2FS_FS_LZ4HC # ÂêØÁî® F2FS Êñá‰ª∂Á≥ªÁªü LZ4HC ÂéãÁº©
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_CRYPTO_ZSTD # ÂêØÁî® ZSTD Âä†ÂØÜ
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_CRYPTO_LZ4 # ÂêØÁî® LZ4 Âä†ÂØÜ

          # ÂêØÁî® ZRAM ÂèäÂÖ∂ÂéãÁº©ÈÄâÈ°π
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_ZRAM # ÂêØÁî® ZRAM
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_ZRAM_LZ4_COMPRESS # ÂêØÁî® ZRAM LZ4 ÂéãÁº©
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_ZRAM_LZ4KD_COMPRESS # ÂêØÁî® ZRAM LZ4KD ÂéãÁº©
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_ZRAM_ZSTD_COMPRESS # ÂêØÁî® ZRAM ZSTD ÂéãÁº©
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_ZRAM_MULTI_COMP # ÂêØÁî® ZRAM Â§öÂéãÁº©Âô®ÊîØÊåÅ

          # Ê∑ªÂä† BBR ÂíåÈÄöÁî® Linux ‰ºòÂåñËÆæÁΩÆ
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_HZ_250 # ËÆæÁΩÆÊó∂ÈíüÈ¢ëÁéá‰∏∫ 250Hz
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_NO_HZ_IDLE # ÂêØÁî®Á©∫Èó≤Êó∂Êó†Êó∂ÈíüËäÇÊãç
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_NET_SCHED # ÂêØÁî®ÁΩëÁªúË∞ÉÂ∫¶
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_TCP_CONG_ADVANCED # ÂêØÁî®È´òÁ∫ß TCP Êã•Â°ûÊéßÂà∂
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_TCP_CONG_BBR # ÂêØÁî® BBR TCP Êã•Â°ûÊéßÂà∂ÁÆóÊ≥ï
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_NET_SCH_FQ # ÂêØÁî® FQ ÁΩëÁªúË∞ÉÂ∫¶Âô®
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_TCP_CONG_BIC # ÂêØÁî® BIC TCP Êã•Â°ûÊéßÂà∂ÁÆóÊ≥ï
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_TCP_CONG_CUBIC # ÂêØÁî® CUBIC TCP Êã•Â°ûÊéßÂà∂ÁÆóÊ≥ï
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_TCP_CONG_WESTWOOD # ÂêØÁî® WESTWOOD TCP Êã•Â°ûÊéßÂà∂ÁÆóÊ≥ï
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_TCP_CONG_HTCP # ÂêØÁî® HTCP TCP Êã•Â°ûÊéßÂà∂ÁÆóÊ≥ï
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_TCP_CONG_BBR3 #ÂêØÁî® BBR3 TCPÊã•Â°ûÊéßÂà∂ÁÆóÊ≥ï
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_INET
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_NET_RX_BUSY_POLL
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_NET_RX_BUSY_READ
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_SCHED_EEVDF # ÂêØÁî® EEVDF Ë∞ÉÂ∫¶Âô®
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_F2FS_FS # ÂêØÁî® F2FS Êñá‰ª∂Á≥ªÁªü
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_F2FS_STAT_FS # ÂêØÁî® F2FS ÁªüËÆ°‰ø°ÊÅØ
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_F2FS_FS_XATTR # ÂêØÁî® F2FS Êâ©Â±ïÂ±ûÊÄß
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_F2FS_FS_POSIX_ACL # ÂêØÁî® F2FS POSIX ACL
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_F2FS_FS_SECURITY # ÂêØÁî® F2FS ÂÆâÂÖ®ÊÄß
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_F2FS_CHECK_FS # ÂêØÁî® F2FS Êñá‰ª∂Á≥ªÁªüÊ£ÄÊü•
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_F2FS_IOSTAT # ÂêØÁî® F2FS IO ÁªüËÆ°
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -d CONFIG_F2FS_FAULT_INJECTION # Á¶ÅÁî® F2FS ÊïÖÈöúÊ≥®ÂÖ•
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -d CONFIG_F2FS_HW_PCI_ROM # Á¶ÅÁî® F2FS Á°¨‰ª∂ PCI ROM
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_F2FS_FS_ENCRYPTION # ÂêØÁî® F2FS Êñá‰ª∂Á≥ªÁªüÂä†ÂØÜ
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_F2FS_FS_COMPRESSION # ÂêØÁî® F2FS Êñá‰ª∂Á≥ªÁªüÂéãÁº©
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_F2FS_FS_LZ4 # ÂêØÁî® F2FS Êñá‰ª∂Á≥ªÁªü LZ4 ÂéãÁº©
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_F2FS_FS_LZO # ÂêØÁî® F2FS Êñá‰ª∂Á≥ªÁªü LZO ÂéãÁº©
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_F2FS_FS_ZSTD # ÂêØÁî® F2FS Êñá‰ª∂Á≥ªÁªü ZSTD ÂéãÁº©

          # I/OË∞ÉÂ∫¶Âô®‰ºòÂåñ
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_BLK_MQ_IOSCHED_DEADLINE # ÂêØÁî®mq-deadline I/OË∞ÉÂ∫¶Âô®
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_BLK_MQ_IOSCHED_KYBER # ÂêØÁî®kyber I/OË∞ÉÂ∫¶Âô®
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_BLK_MQ_IOSCHED_BFQ # Enable BFQ I/O scheduler
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_BLK_MQ_IOSCHED_NONE # Enable NONE I/O scheduler
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -s CONFIG_DEFAULT_IOSCHED "BFQ" # Set BFQ as default I/O scheduler
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_IO_URING_ASYNC_WORK # ÂêØÁî® io_uring ÂºÇÊ≠•Â∑•‰ΩúÈòüÂàó
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_PAGE_POOL # ÂêØÁî®È°µÈù¢Ê±†‰ºòÂåñ
          ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_TRANSPARENT_HUGEPAGE_MADVISE # ÂêØÁî®ÈÄèÊòéÂ§ßÈ°µÔºàMADVISEÊ®°ÂºèÔºâ

          # ÁßªÈô§ check_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki
          
      # 13. ÂêØÁî®kpm
      - name: ÂêØÁî®kpm
        if: ${{ fromJSON(github.event.inputs.ENABLE_KPM) }}
        run: |
         cd ${{ env.KERNEL_WORKSPACE }}/kernel_platform
         ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_KPM

      # 14. ÂêØÁî®LTO
      - name: ÂêØÁî®LTO
        if: ${{ fromJSON(github.event.inputs.ENABLE_LTO) }}
        run: |
         cd ${{ env.KERNEL_WORKSPACE }}/kernel_platform
         ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_LTO_CLANG
         ./scripts/config --file ./common/arch/arm64/configs/gki_defconfig -e CONFIG_LTO_CLANG_THIN

      # 15. Ê∑ªÂä† make ÂêçÁß∞
      - name: Add make name
        run: |
         cd kernel_workspace/kernel_platform
         sed -i '186s|echo ".*"|echo "${KERNELVERSION}${scm_version}${config_localversion}"|' common/scripts/setlocalversion
         sed -i "s/\\${scm_version}/${{ github.event.inputs.KERNEL_NAME }}/g" ./common/scripts/setlocalversion
         
      - name: ËÆæÁΩÆ CONFIG_LOCALVERSION
        run: |
         cd kernel_workspace/kernel_platform
         echo 'CONFIG_LOCALVERSION="${{ github.event.inputs.local_version }}"' >> ./common/arch/arm64/configs/gki_defconfig

    
      - name: ÊãâÂèñÂπ∂ÈõÜÊàê sched_ext Ë∞ÉÂ∫¶Âô®
        run: |
         cd kernel_workspace/kernel_platform/
         git clone https://github.com/3620603660/sched_ext.git
         cp -r ./sched_ext/* ./common/kernel/sched
         rm -rf ./sched_ext/.git

      - name: ÊãâÂèñafdo
        run: |
          cd kernel_workspace/kernel_platform/
          git clone https://github.com/3620603660/afdo.git
            

   
      - name: Build Kernel
        run: |
         # Âä†ÂÖ• clang Âà∞ PATH
         export PATH="${{ github.workspace }}/kernel_workspace/kernel_platform/prebuilts/clang/host/linux-x86/clang-r510928/bin:$PATH"
         # Âä†ÂÖ• ccache Âà∞ PATH
         export PATH="/usr/lib/ccache:$PATH" 

         # ËÆæÁΩÆÂõ∫ÂÆöÂÜÖÊ†∏ÊûÑÂª∫Êó∂Èó¥
         export KERNEL_TIME="${{ github.event.inputs.kernel_time }}"
         export KBUILD_BUILD_TIMESTAMP="$KERNEL_TIME"
         export SOURCE_DATE_EPOCH=$(date -d "$KERNEL_TIME" +%s)
         export AFDO_PROFILE="${{ github.workspace }}/kernel_workspace/kernel_platform/afdo/kernel.afdo"
         if [ ! -f "$AFDO_PROFILE" ]; then
           echo "Error: AFDO profile not found at $AFDO_PROFILE"
         exit 1
         fi

         # ÊâìÂç∞È™åËØÅ
         echo "KERNEL_TIME = $KERNEL_TIME"
         echo "SOURCE_DATE_EPOCH = $SOURCE_DATE_EPOCH"
         echo "Using KCFLAGS: -Wno-error -fauto-profile=$AFDO_PROFILE"

         # ËÆæÁΩÆ‰∏Ä‰∫õÈÄöÁî®ÂèÇÊï∞Ôºà‰æø‰∫éÂêéÁª≠Áª¥Êä§Ôºâ
         export KCFLAGS="-Wno-error -fauto-profile=$AFDO_PROFILE -O2"
         export MAKE_ARGS="LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC=clang \
         RUSTC=../../prebuilts/rust/linux-x86/1.73.0b/bin/rustc \
         PAHOLE=../../prebuilts/kernel-build-tools/linux-x86/bin/pahole \
         LD=ld.lld HOSTLD=ld.lld O=out SOURCE_DATE_EPOCH=${SOURCE_DATE_EPOCH}"

         # ËøõÂÖ•Ê∫êÁ†ÅÁõÆÂΩï
         cd kernel_workspace/kernel_platform/common

         # ÊâßË°å defconfig
         make -j$(nproc) $MAKE_ARGS gki_defconfig

         # ÁºñËØëÂÖ®ÈÉ®ÁõÆÊ†á
         make -j$(nproc) $MAKE_ARGS all

         # ÂàõÂª∫ËæìÂá∫ÁõÆÂΩïÂπ∂Â§çÂà∂ Image
         mkdir -p ../dist
         cp out/arch/arm64/boot/Image ../dist/

      - name: È™åËØÅÂÜÖÊ†∏ÊûÑÂª∫Êó∂Èó¥
        run: |
         strings kernel_workspace/kernel_platform/common/out/vmlinux | grep "UTC"

      - name: Make AnyKernel3 patch (optional)
        if: ${{ fromJSON(github.event.inputs.ENABLE_KPM) }}
        run: |
          cd kernel_workspace/kernel_platform/dist
          curl -LO https://github.com/ShirkNeko/SukiSU_KernelPatch_patch/releases/download/0.11-beta/patch_linux
          chmod +x patch_linux
          ./patch_linux
          rm -f Image
          mv oImage Image

      - name: Prepare AnyKernel3 package
        run: |
          cd kernel_workspace/kernel_platform/dist
          git clone https://github.com/3620603660/AnyKernel3.git AnyKernel3 --depth=1
          rm -rf AnyKernel3/.git
          rm -f AnyKernel3/push.sh
          cp Image AnyKernel3/

      - name: Upload AnyKernel3 artifact
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_oneplus_ace5pro_${{ env.KSUVER }}_sukisu
          path: kernel_workspace/kernel_platform/dist/AnyKernel3/*
          
